// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190228124010_CascadeDeleteExceptionInfo")]
    partial class CascadeDeleteExceptionInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.ApplicationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ChatId");

                    b.Property<long?>("ChatStateId");

                    b.Property<DateTime>("CreatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ChatStateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.Models.ChatState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsWaitingFor");

                    b.Property<string>("WaitingFor");

                    b.HasKey("Id");

                    b.ToTable("ChatStates");
                });

            modelBuilder.Entity("DAL.Models.ExceptionInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long?>("InnerExceptionId");

                    b.Property<long?>("LoggerId");

                    b.Property<string>("Message");

                    b.Property<string>("StackTrace");

                    b.HasKey("Id");

                    b.HasIndex("InnerExceptionId");

                    b.HasIndex("LoggerId");

                    b.ToTable("Exceptions");
                });

            modelBuilder.Entity("DAL.Models.Logger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<Guid>("PrivateToken");

                    b.Property<Guid>("SubscribeToken");

                    b.HasKey("Id");

                    b.ToTable("Loggers");
                });

            modelBuilder.Entity("DAL.Models.UserLogger", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("LoggerId");

                    b.Property<bool>("IsSubscriber");

                    b.HasKey("UserId", "LoggerId");

                    b.HasIndex("LoggerId");

                    b.ToTable("UserLogger");
                });

            modelBuilder.Entity("DAL.Models.ApplicationUser", b =>
                {
                    b.HasOne("DAL.Models.ChatState", "ChatState")
                        .WithMany()
                        .HasForeignKey("ChatStateId");
                });

            modelBuilder.Entity("DAL.Models.ExceptionInfo", b =>
                {
                    b.HasOne("DAL.Models.ExceptionInfo", "InnerException")
                        .WithMany()
                        .HasForeignKey("InnerExceptionId");

                    b.HasOne("DAL.Models.Logger", "Logger")
                        .WithMany("Exceptions")
                        .HasForeignKey("LoggerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.UserLogger", b =>
                {
                    b.HasOne("DAL.Models.Logger", "Logger")
                        .WithMany("UserLoggers")
                        .HasForeignKey("LoggerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.ApplicationUser", "User")
                        .WithMany("UserLoggers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
